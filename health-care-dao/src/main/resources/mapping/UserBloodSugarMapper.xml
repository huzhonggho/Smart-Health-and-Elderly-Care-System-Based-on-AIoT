<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boot.dandelion.health.care.dao.mapper.UserBloodSugarMapper">

    <resultMap id="BaseResultMap" type="com.boot.dandelion.health.care.dao.entity.UserBloodSugar">
        <id column="tenant_id" jdbcType="INTEGER" property="tenantId"/>
        <id column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="thermometer_id" jdbcType="VARCHAR" property="thermometerId"/>
        <result column="time" jdbcType="VARCHAR" property="time"/>
        <result column="sugar" jdbcType="INTEGER" property="sugar"/> <!-- 将 start_time 改为 sugar -->
        <result column="sort_order" jdbcType="INTEGER" property="sortOrder"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_time" jdbcType="VARCHAR" property="updateTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="data_source" jdbcType="VARCHAR" property="dataSource"/>
    </resultMap>

    <sql id="BaseColumnList">
        tenant_id, user_id, thermometer_id, time, sugar, sort_order, state, remarks, create_time, create_by, update_time, update_by, data_source
    </sql>

    <insert id="insert" parameterType="com.boot.dandelion.health.care.dao.entity.UserBloodSugar">
        insert into user_blood_sugar (tenant_id, user_id, thermometer_id, time, sugar,  <!-- 将 start_time 改为 sugar -->
        sort_order, state, remarks, create_time, create_by,
        update_time, update_by, data_source)
        values (#{tenantId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{thermometerId,jdbcType=VARCHAR},
        #{time,jdbcType=VARCHAR}, #{sugar,jdbcType=INTEGER}, #{sortOrder,jdbcType=INTEGER},
        #{state,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR},
        #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR},
        #{dataSource,jdbcType=VARCHAR})
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="com.boot.dandelion.health.care.dao.entity.UserBloodSugar">
        DELETE FROM user_blood_sugar
        WHERE tenant_id = #{tenantId,jdbcType=INTEGER} AND user_id = #{userId,jdbcType=VARCHAR}
    </delete>

    <update id="updateByPrimaryKey" parameterType="com.boot.dandelion.health.care.dao.entity.UserBloodSugar">
        update user_blood_sugar
        set time                    = #{time,jdbcType=VARCHAR},
        sugar                  = #{sugar,jdbcType=INTEGER}, <!-- 将 start_time 改为 sugar -->
        sort_order              = #{sortOrder,jdbcType=INTEGER},
        state                   = #{state,jdbcType=VARCHAR},
        remarks                 = #{remarks,jdbcType=VARCHAR},
        update_time             = #{updateTime,jdbcType=VARCHAR},
        update_by               = #{updateBy,jdbcType=VARCHAR},
        data_source             = #{dataSource,jdbcType=VARCHAR}
        WHERE tenant_id = #{tenantId,jdbcType=INTEGER}
        AND user_id = #{userId,jdbcType=VARCHAR}
    </update>

    <select id="selectByPrimaryKey" parameterType="com.boot.dandelion.health.care.dao.entity.UserBloodSugar" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumnList"/>
        FROM user_blood_sugar
        WHERE tenant_id = #{tenantId,jdbcType=INTEGER} AND user_id = #{userId,jdbcType=VARCHAR}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumnList"/>
        FROM user_blood_sugar
    </select>

</mapper>
